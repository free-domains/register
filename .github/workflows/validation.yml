name: Validation

on:
    pull_request:

    push:
        branches: [main]
        paths:
            - "domains/**"
            - ".github/workflows/validation.yml"
            - "scripts/dns.js"

    workflow_dispatch:

concurrency:
    group: ${{ github.ref }}-validation
    cancel-in-progress: true

jobs:
    dns:
        name: DNS
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Check
              uses: koenrh/dnscontrol-action@v3
              with:
                  args: check
                  config_file: "scripts/dns.js"

    emails:
        name: Emails
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Check Event Type
              id: check_event_type
              run: |
                  if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                      echo "::set-output name=event_type::pr"
                  else
                      echo "::set-output name=event_type::push"
                  fi

            - name: Find Files
              id: find_files
              run: |
                  if [[ "${{ steps.check_event_type.outputs.event_type }}" == "pr" ]]; then
                      files=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files?per_page=100" \
                          | jq -r '.[] | select(.status == "added" or .status == "modified") | .filename' \
                          | grep 'domains/' \
                          | grep '\.json$')
                  else
                      files=$(git diff --name-only --diff-filter=AM "domains/" | grep '\.json$' || echo '')
                  fi

                  echo "::set-output name=files::$files"

            - name: Retrieve Emails
              id: validate_email
              run: |
                  for file in ${{ steps.find_files.outputs.files }}; do
                      owner_email=$(jq -r '.owner.email' "$file")

                      echo "::set-output name=email::$owner_email"
                      echo "::set-output name=file::$file"
                  done

            - name: Validate Emails
              run: |
                  for file in ${{ steps.find_files.outputs.files }}; do
                      filename=$(basename "$file")
                      owner_email=$(jq -r '.owner.email' "$file")

                      if ! email_validation_result=$(wdhdev/validate-email-action@main --email "$owner_email"); then
                          echo "::error::FAIL $owner_email $filename"
                          echo "FAIL $owner_email $filename" >> failed_validations.txt
                      else
                          echo "PASS $owner_email $filename"
                          echo "PASS $owner_email $filename" >> passed_validations.txt
                      fi
                  done

                  if [[ -s failed_validations.txt ]]; then
                      exit 1
                  fi

    json:
        name: JSON
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: JSON Syntax Check
              uses: limitusus/json-syntax-check@v1
              with:
                  pattern: "\\.json$"
              env:
                  BASE: "domains/"
